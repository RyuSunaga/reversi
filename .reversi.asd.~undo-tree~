(undo-tree-save-format-version . 1)
"054a6b13f28ecdd98b44978264482ed37596f61e"
[nil nil nil nil (26473 63162 97437 0) 0 nil]
([nil nil ((2 . 11) (1 . 3) (t . -1)) nil (26473 63162 97434 0) 0 nil])
([nil nil ((11 . 12)) nil (26473 63162 97430 0) 0 nil])
([nil nil ((#("(defsystem )" 0 1 (fontified t) 1 12 (fontified t)) . 1)) nil (26473 63162 97427 0) 0 nil])
([nil nil ((2 . 11) (1 . 3)) nil (26473 63162 97425 0) 0 nil])
([nil nil ((11 . 12)) nil (26473 63162 97421 0) 0 nil])
([nil nil ((13 . 23) (12 . 14) (#("\"" 0 1 (fontified nil)) . -12) (12 . 13)) nil (26473 63162 97418 0) 0 nil])
([nil nil ((24 . 27)) nil (26473 63162 97413 0) 0 nil])
([nil nil ((27 . 31)) nil (26473 63162 97411 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face fontified t)) . -13) (undo-tree-id523 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -14) (undo-tree-id524 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -15) (undo-tree-id525 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -16) (undo-tree-id526 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -17) (undo-tree-id527 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -18) (undo-tree-id528 . -1) (#("j" 0 1 (face font-lock-string-face fontified t)) . -19) (undo-tree-id529 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -20) (undo-tree-id530 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -21) (undo-tree-id531 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -22) (undo-tree-id532 . -1) 23) nil (26473 63162 97404 0) 0 nil])
([nil nil ((13 . 18)) nil (26473 63162 97368 0) 0 nil])
([nil nil ((18 . 19)) nil (26473 63162 97366 0) 0 nil])
([nil nil ((19 . 20)) nil (26473 63162 97363 0) 0 nil])
([nil nil ((28 . 30)) nil (26473 63162 97361 0) 0 nil])
([nil nil ((24 . 33) (#(":descr" 0 6 (face font-lock-builtin-face fontified t)) . -24) (undo-tree-id522 . -6) 30) nil (26473 63162 97357 0) 0 nil])
([nil nil ((33 . 34)) nil (26473 63162 97350 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-builtin-face fontified t)) . -32) (undo-tree-id520 . -1) (#("l" 0 1 (face font-lock-builtin-face fontified t)) . -33) (undo-tree-id521 . -1) 34) nil (26473 63162 97347 0) 0 nil])
([nil nil ((32 . 36)) nil (26473 63162 97338 0) 0 nil])
([nil nil ((36 . 37)) nil (26473 63162 97335 0) 0 nil])
([nil nil ((38 . 40) (37 . 39) (#("\"" 0 1 (fontified nil)) . -37) (37 . 38)) nil (26473 63162 97332 0) 0 nil])
([nil nil ((40 . 41)) nil (26473 63162 97327 0) 0 nil])
([nil nil ((#("M" 0 1 (face font-lock-string-face fontified t)) . -38) (undo-tree-id517 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -39) (undo-tree-id518 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -40) (undo-tree-id519 . -1) 41) nil (26473 63162 97323 0) 0 nil])
([nil nil ((38 . 40)) nil (26473 63162 97309 0) 0 nil])
([nil nil ((40 . 41)) nil (26473 63162 97307 0) 0 nil])
([nil nil ((41 . 48)) nil (26473 63162 97304 0) 0 nil])
([nil nil ((49 . 52)) nil (26473 63162 97302 0) 0 nil])
([nil nil ((53 . 54) (52 . 54) (#("\"" 0 1 (fontified nil)) . -52) (52 . 53)) nil (26473 63162 97299 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -53) (undo-tree-id516 . -1) 54) nil (26473 63162 97293 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified nil)) . -52) (undo-tree-id515 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 53)) nil (26473 63162 97286 0) 0 nil])
([nil nil ((52 . 59)) nil (26473 63162 97280 0) 0 nil])
([nil nil ((59 . 60)) nil (26473 63162 97277 0) 0 nil])
([nil nil ((61 . 63) (60 . 62) (#("\"" 0 1 (fontified nil)) . -60) (60 . 61)) nil (26473 63162 97274 0) 0 nil])
([nil nil ((63 . 64)) nil (26473 63162 97269 0) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-string-face fontified t)) . -61) (undo-tree-id512 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -62) (undo-tree-id513 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -63) (undo-tree-id514 . -1) 64) nil (26473 63162 97264 0) 0 nil])
([nil nil ((61 . 71)) nil (26473 63162 97252 0) 0 nil])
([nil nil ((72 . 75)) nil (26473 63162 97249 0) 0 nil])
([nil nil ((75 . 83)) nil (26473 63162 97246 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-builtin-face fontified t)) . -81) (undo-tree-id510 . -1) (#("e" 0 1 (face font-lock-builtin-face fontified t)) . -82) (undo-tree-id511 . -1) 83) nil (26473 63162 97243 0) 0 nil])
([nil nil ((81 . 83)) nil (26473 63162 97233 0) 0 nil])
([nil nil ((83 . 84)) nil (26473 63162 97231 0) 0 nil])
([nil nil ((85 . 88) (84 . 86) (#("\"" 0 1 (fontified nil)) . -84) (84 . 85)) nil (26473 63162 97228 0) 0 nil])
([nil nil ((89 . 92)) nil (26473 63162 97223 0) 0 nil])
([nil nil ((92 . 100)) nil (26473 63162 97220 0) 0 nil])
([nil nil ((100 . 101)) nil (26473 63162 97217 0) 0 nil])
([nil nil ((102 . 104) (101 . 103) (#("\"" 0 1 (fontified nil)) . -101) (101 . 102)) nil (26473 63162 97214 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -102) (undo-tree-id508 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -103) (undo-tree-id509 . -1) 104) nil (26473 63162 97209 0) 0 nil])
([nil nil ((102 . 106)) nil (26473 63162 97199 0) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-string-face fontified t)) . -103) (undo-tree-id505 . -1) (#("," 0 1 (face font-lock-string-face fontified t)) . -104) (undo-tree-id506 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -105) (undo-tree-id507 . -1) 106) nil (26473 63162 97195 0) 0 nil])
([nil nil ((103 . 105)) nil (26473 63162 97182 0) 0 nil])
([nil nil ((106 . 109)) nil (26473 63162 97180 0) 0 nil])
([nil nil ((109 . 111)) nil (26473 63162 97177 0) 0 nil])
([nil nil ((111 . 120)) nil (26473 63162 97174 0) 0 nil])
([nil nil ((120 . 121)) nil (26473 63162 97172 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -122) (122 . 123) (#(")" 0 1 (fontified nil)) . -122) (122 . 123) (121 . 123)) nil (26473 63162 97168 0) 0 nil])
([nil nil ((123 . 126)) nil (26473 63162 97163 0) 0 nil])
([nil nil ((126 . 132)) nil (26473 63162 97160 0) 0 nil])
([nil nil ((126 . 136) (#(":compo" 0 6 (face font-lock-builtin-face fontified t)) . -126) (undo-tree-id504 . -6) 132) nil (26473 63162 97157 0) 0 nil])
([nil nil ((136 . 137)) nil (26473 63162 97150 0) 0 nil])
([nil nil ((137 . 138)) nil (26473 63162 97147 0) 0 nil])
([nil nil ((140 . 145) (139 . 141) (138 . 140)) nil (26473 63162 97144 0) 0 nil])
([nil nil ((145 . 146)) nil (26473 63162 97140 0) 0 nil])
([nil nil ((147 . 157) (146 . 148) (#("\"" 0 1 (fontified nil)) . -146) (146 . 147)) nil (26473 63162 97137 0) 0 nil])
([nil nil ((159 . 168)) nil (26473 63162 97133 0) 0 nil])
([nil nil ((169 . 170) (168 . 170)) nil (26473 63162 97130 0) 0 nil])
([nil nil ((170 . 174)) nil (26473 63162 97127 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-builtin-face fontified t)) . -171) (undo-tree-id501 . -1) (#("e" 0 1 (face font-lock-builtin-face fontified t)) . -172) (undo-tree-id502 . -1) (#("l" 0 1 (face font-lock-builtin-face fontified t)) . -173) (undo-tree-id503 . -1) 174) nil (26473 63162 97122 0) 0 nil])
([nil nil ((171 . 173)) nil (26473 63162 97109 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-builtin-face fontified t)) . -171) (undo-tree-id499 . -1) (#("e" 0 1 (face font-lock-builtin-face fontified t)) . -172) (undo-tree-id500 . -1) 173) nil (26473 63162 97106 0) 0 nil])
([nil nil ((171 . 173)) nil (26473 63162 97096 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-builtin-face fontified t)) . -172) (undo-tree-id498 . -1) 173) nil (26473 63162 97092 0) 0 nil])
([nil nil ((172 . 174)) nil (26473 63162 97086 0) 0 nil])
([nil nil ((174 . 175)) nil (26473 63162 97084 0) 0 nil])
([nil nil ((176 . 181) (175 . 177) (#("\"" 0 1 (fontified nil)) . -175) (175 . 176)) nil (26473 63162 97080 0) 0 nil])
([nil nil ((183 . 192)) nil (26473 63162 97076 0) 0 nil])
([nil nil ((193 . 198) (192 . 194)) nil (26473 63162 97073 0) 0 nil])
([nil nil ((198 . 199)) nil (26473 63162 97069 0) 0 nil])
([nil nil ((200 . 201) (199 . 201) (#("\"" 0 1 (fontified nil)) . -199) (199 . 200)) nil (26473 63162 97066 0) 0 nil])
([nil nil ((201 . 206)) nil (26473 63162 97061 0) 0 nil])
([nil nil ((208 . 217)) nil (26473 63162 97058 0) 0 nil])
([nil nil ((218 . 223) (217 . 219)) nil (26473 63162 97055 0) 0 nil])
([nil nil ((223 . 224)) nil (26473 63162 97052 0) 0 nil])
([nil nil ((#("	       (:file )))" 0 8 (fontified t) 8 9 (fontified t) 9 14 (face font-lock-builtin-face fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 209)) nil (26473 63162 97049 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -208) (undo-tree-id497 . -1) 209) nil (26473 63162 97046 0) 0 nil])
([nil nil ((209 . 210) (#(")" 0 1 (fontified nil)) . -209) (208 . 210) (#(")" 0 1 (fontified nil)) . -208) (208 . 209)) nil (26473 63162 97038 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -209) (undo-tree-id496 . -1) 210) nil (26473 63162 97032 0) 0 nil])
([nil nil ((209 . 212)) nil (26473 63162 97025 0) 0 nil])
([nil nil ((212 . 213)) nil (26473 63162 97022 0) 0 nil])
([nil nil ((213 . 226)) nil (26473 63162 97019 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-builtin-face fontified t)) . -223) (undo-tree-id493 . -1) (#("d" 0 1 (face font-lock-builtin-face fontified t)) . -224) (undo-tree-id494 . -1) (#("s" 0 1 (face font-lock-builtin-face fontified t)) . -225) (undo-tree-id495 . -1) 226) nil (26473 63162 97015 0) 0 nil])
([nil nil ((223 . 228)) nil (26473 63162 97002 0) 0 nil])
([nil nil ((228 . 229)) nil (26473 63162 96999 0) 0 nil])
([nil nil ((230 . 231) (#(")" 0 1 (fontified nil)) . -230) (230 . 231) (229 . 231)) nil (26473 63162 96996 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -231) (undo-tree-id492 . -1) 232) nil (26473 63162 96990 0) 0 nil])
([nil nil ((231 . 234)) nil (26473 63162 96983 0) 0 nil])
([nil nil ((234 . 250)) nil (26473 63162 96980 0) 0 nil])
([nil nil ((250 . 251)) nil (26473 63162 96977 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -253) (253 . 254) (#(")" 0 1 (fontified nil)) . -253) (252 . 254) (#(")" 0 1 (fontified nil)) . -252) (252 . 253) (251 . 253)) nil (26473 63162 96973 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 146 . 147) (nil fontified nil 137 . 147) (137 . 147)) nil (26473 63162 96966 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-builtin-face fontified t)) . -127) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("o" 0 1 (face font-lock-builtin-face fontified t)) . -128) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("m" 0 1 (face font-lock-builtin-face fontified t)) . -129) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("p" 0 1 (face font-lock-builtin-face fontified t)) . -130) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("o" 0 1 (face font-lock-builtin-face fontified t)) . -131) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("n" 0 1 (face font-lock-builtin-face fontified t)) . -132) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("e" 0 1 (face font-lock-builtin-face fontified t)) . -133) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#("n" 0 1 (face font-lock-builtin-face fontified t)) . -134) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -135) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("s" 0 1 (face font-lock-builtin-face fontified t)) . -136) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("c" 0 1 (face font-lock-builtin-face fontified t)) . -137) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (#("o" 0 1 (face font-lock-builtin-face fontified t)) . -138) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (#("m" 0 1 (face font-lock-builtin-face fontified nil)) . -139) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#("p" 0 1 (face font-lock-builtin-face fontified t)) . -140) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#("o" 0 1 (face font-lock-builtin-face fontified t)) . -141) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (#("n" 0 1 (face font-lock-builtin-face fontified t)) . -142) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("e" 0 1 (face font-lock-builtin-face fontified t)) . -143) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("n" 0 1 (face font-lock-builtin-face fontified t)) . -144) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -145) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (#("s" 0 1 (face font-lock-builtin-face rear-nonsticky t fontified t)) . -146) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) 147) nil (26473 63162 96902 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 136 . 137) (nil fontified nil 127 . 137) (127 . 137)) nil (26473 63162 95337 0) 0 nil])
([nil nil ((254 . 255) 137) nil (26473 63162 95326 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -153) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -154) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -155) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -156) (undo-tree-id554 . -1) (undo-tree-id555 . -1) 157 (t 26473 63162 123015 90000)) nil (26473 63241 382459 0) 0 nil])
([nil nil ((153 . 156)) nil (26473 63241 382380 0) 0 nil])
([nil nil ((156 . 157) (t 26473 63241 407418 774000)) nil (26473 63248 365627 0) 0 nil])
([nil nil ((#("q" 0 1 (face font-lock-string-face fontified t)) . -156) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) 157) nil (26473 63248 365619 0) 0 nil])
([nil nil ((208 . 209) (t 26473 63248 391295 536000)) nil (26473 63324 856321 0) 0 nil])
([nil nil ((#("_" 0 1 (face (font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified t)) . -208) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) 209) nil (26473 63326 560584 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 245 . 246) (nil fontified nil 1 . 246) (1 . 246)) nil (26473 63364 783509 0) 0 nil] [nil nil ((208 . 209) (#(")" 0 1 (fontified nil)) . -208) (208 . 209)) ((#(")" 0 1 (fontified nil)) . 208) (208 . 209) (#(")" 0 1 (fontified t)) . 208)) (26473 63325 960989 0) 0 nil])
([nil nil ((#("(defsystem \"reversi\"
  :description \"My Reversi\"
  :author \"tetunoshin\"
  :license \"MIT\"
  :version \"0.1\"
  :depends-on () ;; 他の依存ライブラリがあればここに記述
  :components ((:file \"constants\")
               (:file \"board\")
" 0 11 (fontified t) 11 20 (face font-lock-string-face fontified t) 20 23 (fontified t) 23 35 (face font-lock-builtin-face fontified t) 35 36 (fontified t) 36 48 (face font-lock-string-face fontified t) 48 51 (fontified t) 51 58 (face font-lock-builtin-face fontified t) 58 59 (fontified t) 59 71 (face font-lock-string-face fontified t) 71 74 (fontified t) 74 82 (face font-lock-builtin-face fontified t) 82 83 (fontified t) 83 88 (face font-lock-string-face fontified t) 88 91 (fontified t) 91 99 (face font-lock-builtin-face fontified t) 99 100 (fontified t) 100 105 (face font-lock-string-face fontified t) 105 108 (fontified t) 108 119 (face font-lock-builtin-face fontified t) 119 123 (fontified t) 123 126 (face font-lock-comment-delimiter-face fontified t) 126 145 (face font-lock-comment-face fontified t) 145 147 (fontified t) 147 158 (face font-lock-builtin-face fontified t) 158 161 (fontified t) 161 166 (face font-lock-builtin-face fontified t) 166 167 (fontified t) 167 178 (face font-lock-string-face fontified t) 178 196 (fontified t) 196 201 (face font-lock-builtin-face fontified t) 201 202 (fontified t) 202 209 (face font-lock-string-face fontified t) 209 211 (fontified t)) . 1) (undo-tree-id578 . -211) (undo-tree-id579 . -211) (undo-tree-id580 . -211)) nil (26473 63364 783505 0) 0 nil])
([nil nil ((#("  :test-depends-on ()" 0 2 (fontified t) 2 18 (face font-lock-builtin-face fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t)) . 210) (undo-tree-id563 . -21)) ((210 . 231)) (26473 63325 329029 0) 0 nil])
([nil nil ((#("               (:file \"player\")))" 0 16 (fontified t) 16 21 (face font-lock-builtin-face fontified t) 21 22 (fontified t) 22 30 (face font-lock-string-face fontified t) 30 33 (fontified t)) . 1) (undo-tree-id577 . -33)) nil (26473 63364 783493 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 210) (undo-tree-id562 . -1)) ((210 . 211)) (26473 63324 856431 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1)) nil (26473 63364 783483 0) 0 nil])
([nil nil ((#("  :test-components ())" 0 2 (fontified t) 2 18 (face font-lock-builtin-face fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 210) (undo-tree-id561 . -22)) ((210 . 232)) (26473 63324 856264 0) 0 nil])
([nil nil ((230 . 231) (t 26473 63364 813973 282000)) nil (26473 63433 291083 0) 0 nil])
nil
([nil nil ((#("  :test-depends-on ()a" 0 2 (fontified t) 2 18 (face font-lock-builtin-face fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 22 (fontified t)) . 209) (undo-tree-id609 . -21) (undo-tree-id610 . -21) (undo-tree-id611 . -21) (undo-tree-id612 . -21) (undo-tree-id613 . -21) (undo-tree-id614 . -21) (undo-tree-id615 . -21) (undo-tree-id616 . -21) (undo-tree-id617 . -21) (undo-tree-id618 . -22) (undo-tree-id619 . -22) (undo-tree-id620 . -22) (undo-tree-id621 . -22) (undo-tree-id622 . -22) (undo-tree-id623 . -22) (undo-tree-id624 . -22) (undo-tree-id625 . -22) (undo-tree-id626 . -22)) nil (26473 63433 291078 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 209) (undo-tree-id607 . -1) (undo-tree-id608 . -1)) nil (26473 63433 291029 0) 0 nil])
([nil nil ((#("  :test-components ())" 0 2 (fontified t) 2 18 (face font-lock-builtin-face fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 209) (undo-tree-id606 . -22)) nil (26473 63433 291021 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -208) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) 209) nil (26473 63433 291012 0) 0 nil])
([nil nil ((208 . 209) (#(")" 0 1 (fontified nil)) . -208) (208 . 209)) nil (26473 63433 290926 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 303 . 304) (nil fontified nil 1 . 304) (1 . 304) (t 26473 63433 319333 769000)) nil (26473 63479 54415 0) 0 nil])
([nil nil ((#("(defsystem \"reversi\"
  :description \"My Reversi\"
  :author \"tetunoshin\"
  :license \"MIT\"
  :version \"0.1\"
  :depends-on ()
  :components ((:file \"constants\")
	       (:file \"board\")
	       (:file \"player\")))
" 0 1 (fontified t) 1 11 (fontified t) 11 20 (face font-lock-string-face fontified t) 20 21 (fontified t) 21 23 (fontified t) 23 35 (face font-lock-builtin-face fontified t) 35 36 (fontified t) 36 48 (face font-lock-string-face fontified t) 48 49 (fontified t) 49 51 (fontified t) 51 58 (face font-lock-builtin-face fontified t) 58 59 (fontified t) 59 71 (face font-lock-string-face fontified t) 71 72 (fontified t) 72 74 (fontified t) 74 82 (face font-lock-builtin-face fontified t) 82 83 (fontified t) 83 88 (face font-lock-string-face fontified t) 88 89 (fontified t) 89 91 (fontified t) 91 99 (face font-lock-builtin-face fontified t) 99 100 (fontified t) 100 105 (face font-lock-string-face fontified t) 105 106 (fontified t) 106 108 (fontified t) 108 119 (face font-lock-builtin-face fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 123 (fontified t) 123 125 (fontified t) 125 126 (face font-lock-builtin-face fontified t) 126 135 (face font-lock-builtin-face fontified t) 135 136 (face font-lock-builtin-face fontified t rear-nonsticky t) 136 137 (fontified t) 137 138 (fontified t) 138 139 (fontified t) 139 144 (face font-lock-builtin-face fontified t) 144 145 (fontified t) 145 156 (face font-lock-string-face fontified t) 156 158 (fontified t) 158 166 (fontified t) 166 167 (fontified t) 167 172 (face font-lock-builtin-face fontified t) 172 173 (fontified t) 173 180 (face font-lock-string-face fontified t) 180 182 (fontified t) 182 190 (fontified t) 190 191 (fontified t) 191 196 (face font-lock-builtin-face fontified t) 196 197 (fontified t) 197 205 (face font-lock-string-face fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t)) . -304) (undo-tree-id694 . -203) (undo-tree-id695 . -126) (undo-tree-id696 . -126) (undo-tree-id697 . -203) (undo-tree-id698 . -126) (undo-tree-id699 . -126) (undo-tree-id700 . -209) (undo-tree-id701 . -208) (undo-tree-id702 . -209) (undo-tree-id703 . -207) (undo-tree-id704 . -207) (undo-tree-id705 . -209) (undo-tree-id706 . -126) (undo-tree-id707 . -209) (undo-tree-id708 . -209) (undo-tree-id709 . -209) (undo-tree-id710 . -209) (undo-tree-id711 . -157) (undo-tree-id712 . -157) (undo-tree-id713 . -207) (undo-tree-id714 . -207) (undo-tree-id715 . -207) (undo-tree-id716 . -207) (undo-tree-id717 . -207) (undo-tree-id718 . -207) (undo-tree-id719 . -207) (undo-tree-id720 . -207) (undo-tree-id721 . -207) (undo-tree-id722 . -207) (undo-tree-id723 . -207) (undo-tree-id724 . -207) (undo-tree-id725 . -207) (undo-tree-id726 . -207) (undo-tree-id727 . -207) (undo-tree-id728 . -207) (undo-tree-id729 . -207) (undo-tree-id730 . -207) (undo-tree-id731 . -207) (undo-tree-id732 . -207) (undo-tree-id733 . -207) (undo-tree-id734 . -207) (undo-tree-id735 . -207) (undo-tree-id736 . -208) (undo-tree-id737 . -208) (undo-tree-id738 . -208) (undo-tree-id739 . -208) (undo-tree-id740 . -181) (undo-tree-id741 . -181) (undo-tree-id742 . -181) (undo-tree-id743 . -181) (undo-tree-id744 . -181) (undo-tree-id745 . -181) (undo-tree-id746 . -209) (undo-tree-id747 . -21) (undo-tree-id748 . -21) (undo-tree-id749 . -21) (undo-tree-id750 . -209) 513) nil (26473 63479 54404 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -303) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) 304) nil (26473 63479 54237 0) 0 nil])
([nil nil ((303 . 304)) nil (26473 63541 723619 0) 0 nil])
([nil nil ((304 . 305) (t 26473 63542 468882 784000)) nil (26473 63661 11996 0) 0 nil] [nil nil ((169 . 173) (t 26473 63479 92433 172000)) ((#("src/" 0 4 (face font-lock-string-face fontified t)) . 169)) (26473 63541 267350 0) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -304) (undo-tree-id825 . -1) 305) nil (26473 63661 11992 0) 0 nil])
([nil nil ((223 . 227)) ((#("src/" 0 4 (face font-lock-string-face fontified t)) . 223)) (26473 63540 808419 0) 0 nil])
([nil nil ((2 . 10)) nil (26473 63661 11985 0) 0 nil])
([nil nil ((280 . 284)) ((#("src/" 0 4 (face font-lock-string-face fontified t)) . 280) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (undo-tree-id757 . -4) (undo-tree-id758 . -4) (t 26473 63520 123364 610000)) (26473 63520 84121 0) 0 nil])
([nil nil ((2 . 16) (#("asdf:def" 0 8 (fontified t)) . -2) (undo-tree-id810 . -8) (undo-tree-id811 . -5) (undo-tree-id812 . -5) (undo-tree-id813 . -6) (undo-tree-id814 . -6) (undo-tree-id815 . -7) (undo-tree-id816 . -7) (undo-tree-id817 . -7) (undo-tree-id818 . -8) (undo-tree-id819 . -8) (undo-tree-id820 . -8) (undo-tree-id821 . -8) (undo-tree-id822 . -8) (undo-tree-id823 . -8) (undo-tree-id824 . -8) 10) nil (26473 63661 11981 0) 0 nil])
nil
([nil nil ((18 . 21) (16 . 17)) nil (26473 63661 11934 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16) (undo-tree-id759 . -1) (undo-tree-id760 . 1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (#(" " 0 1 (fontified t)) . -17) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (#(" " 0 1 (fontified t)) . -18) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#(" " 0 1 (fontified t)) . -19) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (#(" " 0 1 (fontified t)) . -20) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) 21) nil (26473 63661 11923 0) 0 nil])
([nil nil ((16 . 17)) nil (26473 63661 11746 0) 0 nil])
([nil nil ((17 . 18) (t 26473 63661 52017 159000)) nil (26473 63667 708102 0) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -17) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) 18) nil (26473 63667 708227 0) 0 nil])
([nil nil ((1 . 2)) nil (26473 63783 456876 0) 0 nil] [nil nil ((#("\"reversi\"" 0 9 (face font-lock-string-face fontified t)) . 17) (undo-tree-id826 . -7) (undo-tree-id827 . 9) (undo-tree-id828 . -9)) ((17 . 26)) (26473 63667 708064 0) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) 2) nil (26473 63783 456873 0) 0 nil])
nil
([nil nil ((150 . 153)) nil (26473 63783 456851 0) 0 nil])
([nil nil ((153 . 162)) nil (26473 63783 456848 0) 0 nil])
([nil nil ((162 . 163)) nil (26473 63783 456845 0) 0 nil])
([nil nil ((164 . 168) (163 . 165) (#("\"" 0 1 (fontified nil)) . -163) (163 . 164)) nil (26473 63783 456836 0) 0 nil])
([nil nil ((168 . 169) (t 26473 63783 497867 707000)) nil (26473 65211 164658 0) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-string-face fontified t)) . -168) (undo-tree-id848 . -1) 169) nil (26473 65211 164655 0) 0 nil])
([nil nil ((328 . 329)) nil (26473 65211 164651 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -328) (undo-tree-id847 . -1) 329) nil (26473 65211 164648 0) 0 nil])
([nil nil ((328 . 329)) nil (26473 65211 164642 0) 0 nil])
([nil nil ((329 . 331)) nil (26473 65211 164640 0) 0 nil])
([nil nil ((331 . 332)) nil (26473 65211 164639 0) 0 nil])
([nil nil ((332 . 335)) nil (26473 65211 164637 0) 0 nil])
([nil nil ((335 . 336)) nil (26473 65211 164635 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -334) (undo-tree-id845 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -335) (undo-tree-id846 . -1) 336) nil (26473 65211 164632 0) 0 nil])
([nil nil ((334 . 336)) nil (26473 65211 164625 0) 0 nil])
([nil nil ((336 . 337)) nil (26473 65211 164623 0) 0 nil])
([nil nil ((337 . 340)) nil (26473 65211 164621 0) 0 nil])
([nil nil ((#("以" 0 1 (face font-lock-comment-face fontified t)) . -337) (undo-tree-id842 . -1) (#("下" 0 1 (face font-lock-comment-face fontified t)) . -338) (undo-tree-id843 . -1) (#("で" 0 1 (face font-lock-comment-face fontified t)) . -339) (undo-tree-id844 . -1) 340) nil (26473 65211 164619 0) 0 nil])
([nil nil ((337 . 345)) nil (26473 65211 164608 0) 0 nil])
([nil nil ((345 . 347)) nil (26473 65211 164607 0) 0 nil])
([nil nil ((347 . 348)) nil (26473 65211 164605 0) 0 nil])
([nil nil ((348 . 352)) nil (26473 65211 164603 0) 0 nil])
([nil nil ((352 . 353)) nil (26473 65211 164601 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 367 . 368) (nil fontified nil 353 . 368) (353 . 368)) nil (26473 65211 164599 0) 0 nil])
([nil nil ((353 . 355)) nil (26473 65211 164596 0) 0 nil])
([nil nil ((355 . 356)) nil (26473 65211 164594 0) 0 nil])
([nil nil ((371 . 372)) nil (26473 65211 164592 0) 0 nil])
([nil nil ((372 . 374)) nil (26473 65211 164590 0) 0 nil])
([nil nil ((374 . 375)) nil (26473 65211 164588 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 436 . 437) (nil fontified nil 376 . 437) (nil read-only t 375 . 376) (nil fontified nil 375 . 376) (nil field output 375 . 376) (375 . 437)) nil (26473 65211 164586 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t inhibit-line-move-field-capture t front-sticky (read-only) rear-nonsticky t slime-repl-prompt t)) . -375) (undo-tree-id840 . -1) (undo-tree-id841 . -1) 376) nil (26473 65211 164581 0) 0 nil])
([nil nil ((436 . 437)) nil (26473 65211 164558 0) 0 nil])
([nil nil ((437 . 439)) nil (26473 65211 164556 0) 0 nil])
([nil nil ((439 . 440)) nil (26473 65211 164554 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 467 . 468) (nil fontified nil 467 . 468) (nil fontified nil 458 . 467) (nil fontified nil 440 . 458) (440 . 468)) nil (26473 65211 164551 0) 0 nil])
([nil nil ((468 . 469) 437) nil (26473 65211 164542 0) 0 nil])
([nil nil ((#("(asdf:load-system \"reversi\")
" 0 18 (face font-lock-comment-face fontified t slime-repl-old-input 20) 18 27 (face font-lock-comment-face fontified t slime-repl-old-input 20) 27 28 (face font-lock-comment-face rear-nonsticky t fontified t slime-repl-old-input 20) 28 29 (face font-lock-comment-face fontified t)) . 440) (undo-tree-id920 . -29) (undo-tree-id921 . -29) (undo-tree-id922 . -29) (undo-tree-id923 . -29) (undo-tree-id924 . -29) (undo-tree-id925 . -29) (undo-tree-id926 . -29) (undo-tree-id927 . -29) (undo-tree-id928 . -29) (undo-tree-id929 . -29) 469 (t 26473 65211 201978 254000)) nil (26474 19959 468423 0) 0 nil])
([nil nil ((440 . 441)) nil (26474 19959 468391 0) 0 nil])
([nil nil ((#("q" 0 1 (face font-lock-comment-face fontified t)) . -440) (undo-tree-id919 . -1) 441) nil (26474 19959 468388 0) 0 nil])
([nil nil ((440 . 441)) nil (26474 19959 468381 0) 0 nil])
([nil nil ((#("q" 0 1 (face font-lock-comment-face fontified t)) . -440) (undo-tree-id918 . -1) 441) nil (26474 19959 468378 0) 0 nil])
([nil nil ((328 . 329)) nil (26474 19959 468371 0) 0 nil])
([nil nil ((329 . 333)) nil (26474 19959 468368 0) 0 nil])
([nil nil ((329 . 336) (#(":com" 0 4 (face font-lock-builtin-face fontified t)) . -329) (undo-tree-id905 . -4) (undo-tree-id906 . -1) (undo-tree-id907 . -2) (undo-tree-id908 . -3) (undo-tree-id909 . -3) (undo-tree-id910 . -3) (undo-tree-id911 . -4) (undo-tree-id912 . -4) (undo-tree-id913 . -4) (undo-tree-id914 . -4) (undo-tree-id915 . -4) (undo-tree-id916 . -4) (undo-tree-id917 . -4) 333) nil (26474 19959 468364 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-builtin-face fontified t)) . -335) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) 336) nil (26474 19959 468321 0) 0 nil])
([nil nil ((335 . 336)) nil (26474 19959 468306 0) 0 nil])
([nil nil ((#(":commop" 0 7 (face font-lock-builtin-face fontified t)) . 329) (undo-tree-id891 . -6) (undo-tree-id892 . -6) (undo-tree-id893 . -6) (undo-tree-id894 . -6) (undo-tree-id895 . -6) (undo-tree-id896 . -6) (undo-tree-id897 . -7) (undo-tree-id898 . -7) (undo-tree-id899 . -7) (undo-tree-id900 . -7)) nil (26474 19959 468302 0) 0 nil])
([nil nil ((329 . 332)) nil (26474 19959 468267 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-builtin-face fontified t)) . -330) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (#("x" 0 1 (face font-lock-builtin-face fontified t)) . -331) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) 332) nil (26474 19959 468262 0) 0 nil])
([nil nil ((329 . 331) (#(":" 0 1 (fontified t)) . -329) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) 330) nil (26474 19959 468203 0) 0 nil])
([nil nil ((#(":c" 0 2 (face font-lock-builtin-face fontified t)) . 329) (undo-tree-id850 . -2) (undo-tree-id851 . -2) (undo-tree-id852 . -2) (undo-tree-id853 . -2) (undo-tree-id854 . -2)) nil (26474 19959 468144 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 329) (undo-tree-id849 . -1)) nil (26474 19959 468120 0) 0 nil])
([nil nil ((440 . 441) 329) nil (26474 19959 468089 0) 0 nil])
([nil nil ((328 . 329) (t 26474 19959 511650 494000)) nil (26474 21815 973383 0) 0 nil])
([nil nil ((329 . 330)) nil (26474 21815 973379 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -329) (undo-tree-id932 . -1) 330) nil (26474 21815 973375 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 328)) nil (26474 21815 973367 0) 0 nil])
([nil nil ((328 . 330)) nil (26474 21815 973364 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -328) (undo-tree-id930 . -1) (#(" " 0 1 (fontified t)) . -329) (undo-tree-id931 . -1) 330) nil (26474 21815 973356 0) 0 nil])
([nil nil ((436 . 437) (t 26474 21816 18029 631000)) nil (26475 25005 965024 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 464 . 465) (nil fontified nil 437 . 465) (437 . 465)) nil (26475 25005 965020 0) 0 nil])
([nil nil ((437 . 441) (437 . 438)) nil (26475 25005 965016 0) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -439) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -440) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -441) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 442) nil (26475 25005 965011 0) 0 nil])
([nil nil ((439 . 440)) nil (26475 25005 964981 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -439) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 440) nil (26475 25005 964977 0) 0 nil])
([nil nil ((439 . 440)) nil (26475 25005 964939 0) 0 nil])
([nil nil ((58 . 60) (t 26475 25006 12588 481000)) nil (26475 26663 542645 0) 0 nil])
([nil nil ((#("X" 0 1 (face font-lock-builtin-face fontified t)) . -58) (undo-tree-id11 . -1) (#("F" 0 1 (face font-lock-builtin-face fontified t)) . -59) (undo-tree-id12 . -1) 60) nil (26475 26663 542636 0) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -353) (undo-tree-id7 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -354) (undo-tree-id8 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -355) (undo-tree-id9 . -1) 356 (t 26475 26663 568411 816000)) nil (26475 29432 550723 0) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -369) (undo-tree-id4 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -370) (undo-tree-id5 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -371) (undo-tree-id6 . -1) 372) nil (26475 29432 550709 0) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -431) (undo-tree-id1 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -432) (undo-tree-id2 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -433) (undo-tree-id3 . -1) 434) nil (26475 29432 550695 0) 0 nil])
([nil nil ((370 . 371)) nil (26475 29432 550682 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -370) (undo-tree-id0 . -1) 371) nil (26475 29432 550678 0) 0 nil])
([nil nil ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 460)) nil (26475 29432 550645 0) 0 nil])
([nil nil ((#("
;; ---- 以下を読み込めばOK ----
(require 'asdf)
(load \"/Users/xuyonglong/git-repository/reversi/reversi.asd\")
(asdf:load-system \"reversi\")
" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 25 (face font-lock-comment-face fontified t) 25 26 (fontified t) 26 33 (face font-lock-keyword-face fontified t) 33 35 (fontified t) 35 39 (face font-lock-constant-face fontified t) 39 41 (fontified t) 41 47 (fontified t) 47 101 (face font-lock-string-face fontified t) 101 103 (fontified t) 103 121 (fontified t) 121 130 (face font-lock-string-face fontified t) 130 132 (fontified t)) . 328) (undo-tree-id10 . -132) (undo-tree-id11 . -25) 460 (t 26475 29432 606239 151000)) nil (26475 33759 140337 0) 0 nil])
([nil nil ((nil fontified nil 459 . 460) (nil fontified nil 458 . 459) (nil fontified nil 449 . 458) (nil fontified nil 431 . 449) (nil fontified nil 430 . 431) (nil fontified nil 429 . 430) (nil fontified nil 375 . 429) (nil fontified nil 369 . 375) (nil fontified nil 367 . 369) (nil fontified nil 363 . 367) (nil fontified nil 361 . 363) (nil fontified nil 354 . 361) (nil fontified nil 353 . 354) (nil fontified nil 332 . 353) (nil fontified nil 329 . 332) (329 . 460)) nil (26475 33759 140313 0) 0 nil])
([nil nil ((353 . 354) (t 26475 33759 181816 586000)) nil (26479 13529 514969 0) 0 nil])
([nil nil ((354 . 355)) nil (26479 13529 514965 0) 0 nil])
([nil nil ((355 . 356)) nil (26479 13529 514963 0) 0 nil])
([nil nil ((372 . 373)) nil (26479 13529 514960 0) 0 nil])
([nil nil ((373 . 374)) nil (26479 13529 514957 0) 0 nil])
([nil nil ((374 . 375)) nil (26479 13529 514955 0) 0 nil])
([nil nil ((466 . 467) (437 . 438)) nil (26479 13529 514952 0) 0 nil])
([nil nil ((438 . 439)) nil (26479 13529 514948 0) 0 nil])
([nil nil ((439 . 440)) nil (26479 13529 514940 0) 0 nil])
([nil nil ((356 . 357) (t 26479 13529 563427 717000)) nil (26479 31371 580687 0) 0 nil])
([nil nil ((#("(" 0 1 (face font-lock-comment-face fontified t)) . -356) (undo-tree-id0 . -1) 357) nil (26479 31371 580679 0) 0 nil])
([nil current ((470 . 471) (t 26479 31371 629696 183000)) nil (26480 36344 562315 0) 0 nil])
nil
